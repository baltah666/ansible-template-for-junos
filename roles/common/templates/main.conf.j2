#jinja2:lstrip_blocks: True
{# This config is common to all Junos device types. For it to be generated the 'common' role must be included in the platform specific play file. #}
system {
    {# the location is based on whether this is site 1 or site 2. Using the variables in this way you apply site specific values without having to use conditional checks. #}
    time-zone {{ location.time_zone }};
    authentication-order tacplus;
    root-authentication {
        encrypted-password "{{ global.root_hash }}";
    }
    name-server {
    {% for name_server in location.name_servers %}
        {{ name_server }};
    {% endfor %}
    }
    tacplus-server {
    {% for tacacs_server in location.tacacs_servers %}
        {{ tacacs_server.ip }} secret "{{ tacacs_server.secret }}";
    {% endfor %}
    }
    services {
        netconf {
            ssh;
        }
        ssh;
    }
    login {
        message "{{ global.login_message }}";
        user remote {
            class super-user;
        }
        user local_auth {
            class super-user;
            authentication {
                {# note the local_auth uses the same password as the root user. Not ideal for security, just done out of laziness ;) #}
                encrypted-password "{{ global.root_hash }}";
                }
            }
        } 
    
    syslog {
        user * {
            any emergency;
        }
        {% for server in location.syslog_servers %}
        host {{ server }} {
            any any;
            daemon info;
        }
        {% endfor %}
        file messages {
            any notice;
        }
        file cli-commands {
            interactive-commands any; 
            explicit-priority;
        }
        time-format millisecond;
    }
    ntp {
        {% for ntp_server in location.ntp_servers %}
        server {{ ntp_server }};
        {% endfor %}
    }
}
interfaces {
    lo0 {
        unit 0 {
            family inet {
                address {{ host.loopback.ip }}/{{ host.loopback.mask }};
            }
        }
    }
}
snmp { 
    location "{{ location.snmp.location }}"; 
    contact "{{ location.snmp.contact }}";
    {% for snmp in location.snmp.polling %}
    community {{ snmp.community }} { 
        authorization read-only; 
        clients {
            {{ snmp.clients }};
        }
    }
    {% endfor %}
    {% for snmp in location.snmp.traps %}
    trap-group {{ snmp.group_name }} { 
        targets { 
            {{ snmp.target }};
        }
    }
    {% endfor %}
} 

